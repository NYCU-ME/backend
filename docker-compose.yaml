version: '3.3'

services:
  mysqld:
    image: mysql:latest
    volumes:
      - ./data/db:/var/lib/mysql
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: abc123
      MYSQL_DATABASE: nycu_me_dns
      MYSQL_USER: nycu_me
      MYSQL_PASSWORD: abc123
    networks:
      docker:
        ipv4_address: 172.21.21.2
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
        tag: db.sql

  named:
    image: ubuntu/bind9
    volumes:
      - ./data/zones:/var/named
      - ./config/named:/etc/bind
    ports:
      - "53:53/UDP"
      - "53:53"
      - "953:953"
    networks:
      docker:
        ipv4_address: 172.21.21.3
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
        tag: named.dns

  flask_app:
    build: ./images/flask
    restart: always
    volumes:
      - ./config/named/ddnskey.conf:/etc/ddnskey.conf
      - ./config/flask/config.py:/opt/app/config.py
    ports:
      - "8000:8000"
    networks:
      docker:
        ipv4_address: 172.21.21.4
    depends_on:
      - fluentd
      - named
      - mysqld
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
        tag: backend.api

  backend_app:
    build: ./images/flask
    command: ["python3", "launch_thread.py"]
    volumes:
      - ./config/named/ddnskey.conf:/etc/ddnskey.conf
      - ./config/flask/config.py:/opt/app/config.py
    networks:
      docker:
        ipv4_address: 172.21.21.5
    depends_on:
      - fluentd
      - mysqld
      - named
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
        tag: backend.thread

  fluentd:
    build: ./images/fluentd
    container_name: fluentd
    volumes:
      - ./config/fluentd:/fluentd/etc
      - ./data/logs:/fluentd/logs
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      docker:
        ipv4_address: 172.21.21.6
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=elastic-udt-cluster
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      docker:
        ipv4_address: 172.21.21.7

networks:
  docker:
    ipam:
      config:
        - subnet: 172.21.21.0/24


